<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />

    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
  </configSections>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
    <add key="RefDataLoadTypeMT940Id" value="1" />
    <add key="RefDataLoadTypeOracleGLId" value="2" />
  </appSettings>
  <connectionStrings>
    <!--<add name="FRSMT940LoaderContext" connectionString="metadata=res://*/FRSMT940LoaderModel.csdl|res://*/FRSMT940LoaderModel.ssdl|res://*/FRSMT940LoaderModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=cp.bilalrehman.com;initial catalog=GF-FRS-V.2;persist security info=True;user id=frs;password=inn0st@rk;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient"/>-->
    <add name="FRSMT940LoaderContext" connectionString="metadata=res://*/FRSMT940LoaderModel.csdl|res://*/FRSMT940LoaderModel.ssdl|res://*/FRSMT940LoaderModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=MININT-CL4K23O\SQLEXPRESS20121;initial catalog=GF-FRS-V.2;persist security info=True;user id=sa;password=Sqlsql123;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
    <!--<add name="FrsOracleGLLoaderContext" connectionString="metadata=res://*/DataModel.FrsOracleGLLoaderModel.csdl|res://*/DataModel.FrsOracleGLLoaderModel.ssdl|res://*/DataModel.FrsOracleGLLoaderModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=cp.bilalrehman.com;initial catalog=GF-FRS-V.2;persist security info=True;user id=frs;password=inn0st@rk;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />-->
    <add name="FrsOracleGLLoaderContext" connectionString="metadata=res://*/DataModel.FrsOracleGLLoaderModel.csdl|res://*/DataModel.FrsOracleGLLoaderModel.ssdl|res://*/DataModel.FrsOracleGLLoaderModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=MININT-CL4K23O\SQLEXPRESS20121;initial catalog=GF-FRS-V.2;persist security info=True;user id=sa;password=Sqlsql123;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />

    <add name="NLogConStr" providerName="System.Data.SqlClient" connectionString="Data Source=MININT-CL4K23O\SQLEXPRESS20121;Initial Catalog=GF-FRS-V.2;Persist Security Info=True;User ID=sa;Password=Sqlsql123" />
  </connectionStrings>

  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Trace"
      internalLogFile="c:\nlog_log2.log"
      throwExceptions="true">

    <extensions>
      <add assembly="NLog.Extended" />
    </extensions>

    <variable name="appName" value="FRS.MT940LoaderService2" />

    <targets async="true">
      <!--<target name="logfile" xsi:type="File" fileName="FRS.MT940LoaderServices." />-->
      <!--FILE-->
      <target xsi:type="File"
              name="default"
              layout="${longdate} - ${level:uppercase=true}: ${message}"
              fileName="C:\${appName}\Debug.log"
              keepFileOpen="false"
              archiveFileName="${appName}\Debug_${shortdate}.{##}.log"
              archiveNumbering="Sequence"
              archiveEvery="Day"
              maxArchiveFiles="30"
            />
      <!--CONSOLE-->
      <target name="console" xsi:type="Console" />

      <!--DATABASE-->
      <!--<target xsi:type="Database" name="dbTarget" connectionStringName="NLogConStr" commandType="StoredProcedure"  commandText="spTest">
        <parameter name="@logged" layout="${date}" />
        <parameter name="@message" layout="${message}" />
      </target>
      <target name="debugTarget" xsi:type="Debugger"
        layout="${time}|${level:uppercase=true}|${logger}|${message}" />
    </targets>-->

      <target name="asyncDbWrapperTarget" xsi:type="AsyncWrapper" queueLimit="10000"  timeToSleepBetweenBatches="50" batchSize="100" overflowAction="Block">
        <target xsi:type="Database" name="dbTarget" connectionStringName="NLogConStr" commandType="StoredProcedure"  commandText="WriteServiceLog">
          <parameter name="@machineName" layout="${machinename}"/>
          <parameter name="@siteName" layout="sitename"/>
          <!--${iis-site-name}-->
          <parameter name="@logged" layout="${date}"/>
          <parameter name="@level" layout="${level}"/>
          <parameter name="@userName" layout="user123"/>
          <!--${aspnet-user-identity}-->
          <parameter name="@Application" layout="app1"/>
          <!--${aspnet-application:variable=String}-->
          <parameter name="@message" layout="${message}"/>
          <parameter name="@logger" layout="${logger}"/>
          <parameter name="@properties" layout="${all-event-properties:separator=|}"/>
          <parameter name="@serverName" layout="serv1"/>
          <!--${aspnet-request:serverVariable=SERVER_NAME}-->
          <parameter name="@port" layout="8080"/>
          <!--${aspnet-request:serverVariable=SERVER_PORT}-->
          <parameter name="@SessionId" layout="123"/>
          <!--${aspnet-sessionid}-->
          <parameter name="@ThreadId" layout="${threadid}"/>
          <parameter name="@Referrer" layout="refer"/>
          <!--${aspnet-request:serverVariable=HTTP_REFERER}-->
          <parameter name="@UserAgent" layout="usrag"/>
          <!--${aspnet-request:serverVariable=HTTP_USER_AGENT}-->
          <parameter name="@Code" layout="${event-context:item=Code}"/>
          <parameter name="@url" layout="abc.com"/>
          <!--${aspnet-request:serverVariable=HTTP_URL}-->
          <parameter name="@https" layout="1"/>
          <!--${when:inner=1:when='${aspnet-request:serverVariable=HTTPS}' == 'on'}${when:inner=0:when='${aspnet-request:serverVariable=HTTPS}' != 'on'}-->
          <parameter name="@serverAddress" layout="localadd"/>
          <!--${aspnet-request:serverVariable=LOCAL_ADDR}-->
          <parameter name="@remoteAddress" layout="remadd"/>
          <!--${aspnet-request:serverVariable=REMOTE_ADDR}:${aspnet-request:serverVariable=REMOTE_PORT}-->
          <parameter name="@callSite" layout="${callsite}"/>
          <parameter name="@PartitionKey" layout="1"/>
          <parameter name="@exception" layout="${exception:tostring}"/>
        </target>
      </target>

      <target name="asyncDebugWrapperTarget" xsi:type="AsyncWrapper" queueLimit="10000" timeToSleepBetweenBatches="50" batchSize="100" overflowAction="Block">
        <target name="debugTarget" xsi:type="Debugger" layout="${time}|${level:uppercase=true}|${logger}|${message}" />
      </target>

    </targets>

    <rules>
      <logger name="*" minlevel="Trace" writeTo="default" />
      <logger name="*" minlevel="Info" writeTo="console" />
      <!-- Levels: Off, Trace, Debug, Info, Warn, Error, Fatal -->
      <!--<logger name="*" minlevel="Trace" writeTo="debugTarget,dbTarget" />-->
      <logger name="*" minlevel="Trace"  writeTo="asyncDebugWrapperTarget,asyncDbWrapperTarget" />
    </rules>
  </nlog>

  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
    <httpModules>
      <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" />
    </httpModules>
  </system.web>
  <system.serviceModel>
    <extensions>
      <behaviorExtensions>
        <add name="validateDataAnnotationsBehavior" type="DevTrends.WCFDataAnnotations.ValidateDataAnnotationsBehaviorExtensionElement, DevTrends.WCFDataAnnotations, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null" />
      </behaviorExtensions>
    </extensions>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false" />
          <validateDataAnnotationsBehavior />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true">
      <remove name="ApplicationInsightsWebTracking" />
      <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" preCondition="managedHandler" />
    </modules>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true" />
    <validation validateIntegratedModeConfiguration="false" />
  </system.webServer>
</configuration>